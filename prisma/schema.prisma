generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Superclasse User - Contém os dados comuns a todos os usuários
model User {
  id        String   @id @default(cuid()) @map("id_user")
  name      String
  email     String   @unique
  phone     String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  collaborators Collaborator[] // Relacionamento com os colaboradores

  @@map("user")
}

// Modelo AccessLevel - Para controle de permissões de acesso
model AccessLevel {
  id_accessLevel Int             @id @default(autoincrement())
  levelName      AccessLevelEnum @unique
  label          String? // Agora você tem o campo `label` (opcional)

  collaborators Collaborator[] // Relacionamento com colaboradores

  @@map("access_level")
}

// Enum para definir os níveis de acesso
enum AccessLevelEnum {
  ADMIN
  MANAGER
  USER
}

// Modelo Collaborator - Herda informações de User
model Collaborator {
  id_collaborator String @id @default(cuid()) @map("id_colaborador")
  userId          String
  id_departament  Int
  id_profession   Int
  id_accessLevel  Int

  // Relacionamentos
  user        User        @relation(fields: [userId], references: [id]) // Relacionamento com User
  accessLevel AccessLevel @relation(fields: [id_accessLevel], references: [id_accessLevel])
  department  Department  @relation(fields: [id_departament], references: [id_departament])
  profession  Profession  @relation(fields: [id_profession], references: [id_profession])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("collaborator")
}

// Modelo Department - Departamentos aos quais os colaboradores pertencem
model Department {
  id_departament Int            @id @default(autoincrement())
  name           String
  label          String?
  collaborators  Collaborator[] // Relacionamento com colaboradores

  @@map("department")
}

// Modelo Profession - Profissões dos colaboradores
model Profession {
  id_profession Int            @id @default(autoincrement())
  name          String
  collaborators Collaborator[] // Relacionamento com colaboradores

  @@map("profession")
}
